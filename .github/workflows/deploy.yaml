name: Deploy
on:
  push:
    branches:
      - main

jobs:
  install-dependencies:
    name: dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Config
        uses: actions/checkout@v3

      - name: Install Node:20.10.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.0

      - name: Event data
        run: toJson(github.event)

      - name: Dependencies cache
        uses: actions/cache@v3
        id: dependencies-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.dependencies-cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

  # prerelease:
  #   if: "!contains(github.event.head_commit.message, 'chore(release)')"
  #   needs: install-dependencies
  #   name: prerelease
  #   runs-on: ubuntu-latest
  #   environment: beta
  #   steps:
  #     - name: Config
  #       uses: actions/checkout@v3

  #     - name: Install Node:20.10.0
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20.10.0

  #     - name: Restore cache
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

  #     - name: SemVer
  #       env:
  #         IS_RELEASE: 'false'
  #       run: npx semantic-release@23.0.8

  # release:
  #   if: "!contains(github.event.head_commit.message, 'chore(release)')"
  #   needs: install-dependencies
  #   name: release
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #     - name: Config
  #       uses: actions/checkout@v3

  #     - name: Install Node:20.10.0
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20.10.0

  #     - name: Restore cache
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

  #     - name: SemVer
  #       env:
  #         IS_RELEASE: 'true'
  #       run: bash ../release.sh
